name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Linter (Flake8)
      run: |
        pip install flake8
        flake8 .

    - name: Set up PostgreSQL
      uses: docker://postgres:latest
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: test_db
      options: > 
        --health-cmd "pg_isready -U postgres" 
        --health-interval 10s 
        --health-timeout 5s 
        --health-retries 5 
        -p 5432:5432

    - name: Wait for PostgreSQL to start
      run: sleep 10

    - name: Run Tests with Coverage
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      run: |
        pip install coverage
        coverage run manage.py test
        coverage report
        coverage xml
        coverage html

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

